function f = objfun(x)

% Primeiro fazer tudo com graus e depois mudar pra radianos

h = 1
hm = 1
hc = 1
d3 = 1
r = 1
h0 = 0

thetaR = x(1)
m = x(2)
l1 = x(3)

thetaM = pi/180*linspace(-30,30)
thetaN = atan((h - hm - hc)/m)
theta = thetaR - thetaN + thetaM

l0 = sqrt((h - hm - hc)^2 + (m)^2)
l2 = sqrt((l1*cos(thetaR) + d3 - m - r)^2 + ...
    (h - hm - l1*sin(thetaR) - h0)^2)
l3 = sqrt(hc^2 + d3^2)

k1 = -2*l1*l3*sin(theta)
k2 = 2*l3*(l0 - l1*cos(theta))
k3 = l0^2 + l1^2 - l2^2 + l3^2 - 2*l0*l1*cosd(theta)

phi = 2*atand((-k1 - sqrt(k1.^2 + k2.^2 - k3.^2))./(k3 - k2))

gama0 = atand(hc/d3)
gama = 180 - phi - gama0 - thetaN
gamaL = linspace(-30,30)

e = (gama - gamaL).^2 % Diferença entre a aproximação linear e os valores reais
dTheta = theta(2) - theta(1) % Cálculo do incremento de theta
ie = sum(e*dTheta) % Cálculo da integral do erro
f = ie % Valor da função objetivo










